# src/main/resources/application.yml
spring:
  application:
    name: auth-service
  
  profiles:
    active: dev
  
  datasource:
    url: jdbc:mysql://localhost:3306/auth_db?useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: Ma1ya@nk3  # Using your actual password
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true  # Enable for debugging
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
            # IMPORTANT: Remove context-path from redirect URI
            redirect-uri: "http://localhost:8080/login/oauth2/code/google"
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v2/userinfo
            user-name-attribute: email

# OAuth2 App Configuration
app:
  oauth2:
    authorized-redirect-uris:
      - http://localhost:3000/auth/callback
      - http://localhost:8080/auth/callback
      - https://yourapp.com/auth/callback
    success-redirect-uri: http://localhost:3000/auth/callback
    failure-redirect-uri: http://localhost:3000/auth/error
    cookie-expire-seconds: 180
    cookie-name: oauth2_auth_request

# JWT Configuration
jwt:
  secret: mySecretKey1234567890123456789012345678901234567890
  expiration: 86400000 # 24 hours in milliseconds
  refresh-expiration: 604800000 # 7 days in milliseconds
  token-type: Bearer
  token-prefix: "Bearer "
  header-name: Authorization

# Server Configuration - MODIFIED
server:
  port: 8080
  # REMOVE context-path for OAuth2 to work correctly
  # servlet:
  #   context-path: /api/v1

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized

# Logging
logging:
  level:
    mayankSuperApp.auth_service: DEBUG  # Updated to match your package
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Swagger/OpenAPI
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    try-it-out-enabled: true
    operations-sorter: method
    tags-sorter: alpha